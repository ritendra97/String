//Smallest window that contains all characters of string itself
import java.util.*;
public class Practice 
{
	static String findSubString(String str) 
    {
		int n=0;
		int count=0;
		int j=0;
		int i=0;
		int target = Integer.MAX_VALUE;
		int start_index=0;
		HashMap<Character,Integer> map = new HashMap<>();
		Set<Character> ans = new HashSet<Character>();
		for(int k=0;k<str.length();k++)
		{
		    ans.add(str.charAt(k));
		}
		n=ans.size();
		for(i =0;i<str.length();i++)
		{
			if(map.containsKey(str.charAt(i)))
		    {
		    	map.put(str.charAt(i),map.get(str.charAt(i))+1);
		    }
		    else
		    {
		    	count++;
		    	map.put(str.charAt(i), 1);
		    }
			if(n==count)
			{
				while(map.get(str.charAt(j))>1)
				{
					if(map.get(str.charAt(j))>1)
					{
						map.put(str.charAt(j),map.get(str.charAt(j))-1);
					}
					j++;
				}
				int len_window=i-j+1;
				if(target>len_window)
				{
					target=len_window;
					start_index=j;
				}
			}
		}
		return str.substring(start_index, start_index + target);
    }
	public static void main(String[] args)
	{
		String str = "aabcbcdbca"; 
        System.out.println("Smallest window containing all distinct"+" characters is: " + findSubString(str));
	}
}
