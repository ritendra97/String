//Find all distinct palindromic sub-strings of a given string
import java.util.*;
public class Practice 
{
	public static boolean isPalindrome(String str)
	{
		int i=0;
		int j=str.length()-1;
		while(i<=j)
		{
			if(str.charAt(i)!=str.charAt(j))
				return false;
			else
			{
				i++;
				j--;
			}
		}
		return true;
	}
	public static int allString(String str)
	{
		int count =0;
		for(int i=0;i<str.length();i++)
		{
			for(int j=i;j<str.length();j++)
			{
				if(isPalindrome(str.substring(i,j+1))==true)
				{
					System.out.println(str.substring(i,j+1));
					count++;
				}
			}
		}
		return count;
	}
    public static void main(String[] args) 
	{
    	String str = "abbc";
    	System.out.println(allString(str));
	}
}
// Solve this buy techidelight please go through with algo
import java.util.*;
public class DynamicProgramming 
{
	public static void expand(String str,int low,int high,Set<String> set)
	{
		while(low>=0 && high<str.length() && str.charAt(low)==str.charAt(high))
		{
			set.add(str.substring(low,high+1));
			low--;
			high++;
		}
	}
	public static void allPalindromicSubstrings(String str)
    {
		HashSet<String> set = new HashSet<String>();
		for(int i=0;i<str.length();i++)
		{
			expand(str,i,i,set);
			expand(str,i,i+1,set);
		}
		System.out.println(set);
    }
	public static void main(String[] args) {
		String str = "google";
		allPalindromicSubstrings(str);
        //System.out.print();
	}

}
