import java.util.*;
public class StringProblem 
{
	static boolean isPalindrome(String s)
    {
		int j = s.length()-1;
        int i = 0;
        while(i<=j)
        {
            if(s.charAt(i)!=s.charAt(j))
            {
                return false;
            }
            else
            {
                i++;
                j--;
            }
        }
        return true;
    }
    static String longestPalin(String S)
    {
    	int max_len =0;
    	int first=0;
        for(int i=0;i<S.length();i++)
        {
        	for(int j=S.length()-1;j>=i;j--)
        	{
        		String t = S.substring(i,j+1);
        		if(isPalindrome(t))
        		{
        			int len = j-i+1;
        			if(max_len<len)
        			{
        				first =i;
        				max_len=len;
        			}
        		}
        	}
        }
        return S.substring(first,first+max_len);
    }
	public static void main(String[] args) 
	{
		String S = "forgeeksskeegfor";
		System.out.println(longestPalin(S));
	}
}
// This is optimized solution

import java.util.*;
public class StringProblem 
{
	
    static String longestPalin(String S)
    {
    	int low=0;
    	int high=0;
    	int start=0;
    	int max_len=1;
    	for(int i=1;i<S.length();i++)
    	{
    		//this is for even length
    		low =i-1;
    		high =i;
    		while(low>=0 && high<S.length() && S.charAt(low)==S.charAt(high))
    		{
    			if(high-low+1>max_len)
    			{
    				start=low;
    				max_len=high-low+1;
    			}
    			--low;
    			++high;
    		}
    		// Below is for odd length
    		low =i-1;
    		high =i+1;
    		while(low>=0 && high<S.length() && S.charAt(low)==S.charAt(high))
    		{
    			if(high-low+1>max_len)
    			{
    				start=low;
    				max_len=high-low+1;
    			}
    			--low;
    			++high;
    		}

    	}
        return S.substring(start,start+max_len);
    }
	public static void main(String[] args) 
	{
		String S = "forgeeksskeegfor";
		System.out.println(longestPalin(S));
	}
}
