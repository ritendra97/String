//KMP Algorithm implementation Searching pattern
import java.util.*;
public class StringProblem 
{
	public static int[] computetoArray(char pattern[])
	{
		int lps[]= new int[pattern.length];
		int index=0;
		for(int i=1;i<pattern.length;)
		{
			if(pattern[i]==pattern[index])
			{
				lps[i]=index+1;
				index++;
				i++;
			}
			else if(index!=0)
			{
				index=lps[index-1];
			}
			else
				lps[i]=0;
			    i++;
		}
		return lps;
	}
	public static boolean KMPsearch(char text[],char pattern[])
	{
		int lps[] = computetoArray(pattern);
		int i=0;
		int j=0;
		int k=0;
	    while(i<text.length && j<pattern.length)
	    {
	    	if(text[i]==pattern[j])
	    	{
	    		i++;
	    		j++;
	    	}
	    	else
	    	{
	    		if(j!=0)
	    		{
	    			j=lps[j-1];
	    		}
	    		else
	    			i++;
	    	}
	    }
	    if(j==pattern.length)
	    	return true;
	    return false;
	}
	public static void main(String[] args) 
	{
        String text = "abcxabcdabcdabcy";
        String pattern = "abcdabcy";
        boolean ans = KMPsearch(text.toCharArray(),pattern.toCharArray());
        System.out.println(ans);
	}

}
// below is the previous 
import java.util.*;
public class Practice 
{
	public static void search(String txt,String pat)
	{
		int pattern[] = new int[pat.length()];
		int i=0;
		int j=1;
		pattern[i]=0;
		while(i<pattern.length && j<pattern.length)
		{
			if(pat.charAt(i)==pat.charAt(j))
			{
				pattern[j]=i+1;
				i++;
				j++;
			}
			else if(pat.charAt(i)!=pat.charAt(j))
			{
				if(i!=0)
		     	    i=pattern[i-1];
				else
				{
					pattern[j]=0;
					j++;
				}	
			}
		}
		int k=0;//text search
		int l=0;//pat search
		int N=txt.length();
		int M=pat.length();
		while(k<N)
		{
			if(txt.charAt(k)==pat.charAt(l))
			{
				k++;
				l++;
			}
			if(l==M)
			{
				System.out.println(k-l+" ");
				l=pattern[l-1];
			}
			else if(k<N && txt.charAt(k)!=pat.charAt(l))
			{
				if(l!=0)
				    l=pattern[l-1];
				else
					k=k+1;
			}
		}
	}
	public static void main(String[] args) 
	{
		String txt = "AABAACAADAABAAABAA"; 
        String pat = "AABA"; 
        search(txt,pat);
	}
}
